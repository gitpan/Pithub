{"statement":[17,17,17,18,18,18,19,19,19,20,20,20,21,21,21,22,22,22,32,32,25,38,38,38,38,38,39,43,43,43,52,52,52,54,54,54,72,73,74,75,76,77,79,81,82,85,88,91,92,93,114,114,114,108,113,115,115,119,119,120,120,121,122,123,124,124,126,125,133,129,130,131,1292,1292,1292,1293,1293,1293,1294,1294,1294,1297,1300,1302,"1300","1300","1300",1333,1333,1333,1334,1334,1334,1340,1340,1340,1341,1341,1341,1535,1535,1535,97,98,99,100,101,102,115,140,142,143,144,146,147,150,154,155,156,158,162,164,168,169,179,180,185,189,190,191,192,193,202,208,210,212,215,216,220,222,224,239,239,240,242,248,249,250,251,257,258,259,261,266,269,269,271,272,277,278,279,280,283,284,286,299,288,289,290,291,292,295,298,302,302,303,303,304,304,306,311,312,313,317,318,318,319,326,327,327,329,329,334,335,336,338,343,344,346,347,347,349,350,350,351,351,353,353,354,356,356,357,357,360,363,364,368,369,370,373,373,375,378,376,379,380,385,388,389,391,392,393,394,395,396,396,397,397,398,399,402,405,408,409,410,411,412,413,418,419,421,422,424,425,425,426,426,427,429,432,433,434,435,436,439,439,440,441,442,442,443,447,449,449,450,450,451,453,453,454,455,455,456,457,458,459,462,462,464,471,472,472,473,474,475,476,483,484,486,486,487,489,490,491,494,495,497,501,502,503,505,506,506,507,508,508,509,509,510,510,511,511,511,513,513,514,516,516,519,522,523,528,528,530,535,533,536,541,544,545,546,547,548,549,550,551,551,552,552,553,558,561,562,563,564,565,570,572,574,575,575,576,576,577,579,582,583,584,585,588,589,589,590,590,591,595,597,597,598,598,599,601,601,603,610,611,612,614,615,616,617,618,621,622,623,624,625,628,629,633,634,642,643,647,648,649,651,657,659,660,662,663,664,665,666,668,669,670,671,672,674,676,678,680,681,683,686,692,693,699,700,704,705,706,710,711,715,716,720,721,723,724,725,726,727,729,729,730,731,733,735,739,740,741,742,744,744,745,746,747,748,750,751,752,756,760,761,762,763,764,765,766,767,768,769,772,774,776,778,781,785,786,788,795,796,798,804,805,806,806,807,809,813,814,815,815,817,817,818,819,820,822,823,824,828,831,832,833,834,836,838,842,843,853,857,858,859,859,862,863,863,864,867,867,868,871,871,873,875,876,878,878,879,880,884,884,884,885,885,888,893,894,894,895,902,903,903,904,905,910,911,911,912,917,922,923,927,928,929,930,931,932,934,936,937,939,939,940,940,942,943,945,946,947,947,950,951,953,954,960,962,963,964,966,970,972,977,978,1015,1016,1018,1018,1022,1023,1026,1028,1081,1082,1083,1084,1085,1086,1090,1091,1092,1094,1096,1101,1102,1105,1107,1111,1114,1115,1116,1140,1123,1124,1125,1132,1133,1135,1137,1139,1142,1143,1144,1145,1148,1151,1151,1152,1153,1158,1161,1165,1170,1171,1172,1173,1178,1179,1183,1184,1188,1189,1189,1190,1191,1192,1191,1195,1198,1200,1206,1207,1211,1212,1213,1214,1215,1215,1216,1221,1223,1222,1224,1224,1229,1230,1231,1233,1234,1235,1238,1242,1246,1250,1251,1252,1253,1259,1260,1264,1265,1265,1268,1269,1273,1275,1276,1280,1281,1282,1283,1284,1287,1288,1289,1307,1308,1309,1312,1312,1313,1313,1314,1314,1316,1316,1317,1317,1318,1318,1320,1320,1322,1322,1323,1326,1326,1327,1328,1348,1350,1352,1353,1354,1359,1359,1362,1363,1364,1370,1372,1378,1382,1383,1387,1390,1391,1392,1396,1397,1398,1399,1400,1402,1406,1410,1411,1413,1414,1417,1419,1422,1426,1430,1431,1432,1434,1435,1439,1443,1445,1448,1450,1451,1452,1453,1454,1455,1459,1472,1474,1476,1477,1480,1481,1482,1483,1485,1487,1489,1491,1495,1461,1462,1463,1464,1465,1466,1468,1470,1471,1500,1501,1502,1503,1504,1505,1511,1515,1517,1518,1519,1520,1523,1524,1525,1527,1528,1531,1531,1538,1539,1540,1545,1546,1547,1548,1549,1550,1551,1552,1553,1554,1558,1559,1561,1562,1563,1564,1565,1566,1569,1571,1572,1573,1574,1575,1577,1579,1580,1584,1585,1585,1586,1587],"subroutine":[[17,"BEGIN"],[18,"BEGIN"],[19,"BEGIN"],[20,"BEGIN"],[21,"BEGIN"],[22,"BEGIN"],[32,"BEGIN"],[38,"BEGIN"],[38,"BEGIN"],[43,"BEGIN"],[52,"BEGIN"],[54,"BEGIN"],[72,"BEGIN"],[114,"BEGIN"],[108,"BEGIN"],[1292,"BEGIN"],[1293,"BEGIN"],[1294,"BEGIN"],[1297,"BEGIN"],["1300","BEGIN"],[1333,"BEGIN"],[1334,"BEGIN"],[1340,"BEGIN"],[1341,"BEGIN"],[1535,"BEGIN"],[97,"DEBUG"],[115,"__ANON__"],[125,"__ANON__"],[140,"import"],[179,"configure"],[220,"configure_SSL"],[288,"__ANON__"],[311,"_set_rw_error"],[326,"connect"],[343,"connect_SSL"],[471,"_update_peer"],[483,"accept"],[501,"accept_SSL"],[610,"generic_read"],[633,"read"],[642,"sysread"],[647,"peek"],[657,"generic_write"],[692,"write"],[699,"syswrite"],[704,"print"],[710,"printf"],[715,"getc"],[720,"readline"],[795,"close"],[813,"stop_SSL"],[893,"fileno"],[902,"_get_ssl_object"],[910,"_get_ctx_object"],[917,"_invalid_object"],[922,"pending"],[927,"start_SSL"],[960,"new_from_fd"],[977,"dump_peer_certificate"],[1015,"peer_certificate"],[1081,"verify_hostname_of_cert"],[1123,"__ANON__"],[1170,"verify_hostname"],[1178,"get_cipher"],[1183,"errstr"],[1188,"fatal_ssl_error"],[1206,"get_ssleay_error"],[1211,"error"],[1221,"DESTROY"],[1229,"socket_to_SSL"],[1230,"socketToSSL"],[1231,"kill_socket"],[1233,"issuer_name"],[1234,"subject_name"],[1235,"get_peer_certificate"],[1238,"context_init"],[1242,"set_default_context"],[1246,"set_default_session_cache"],[1250,"set_ctx_defaults"],[1259,"opened"],[1264,"opening"],[1268,"want_read"],[1269,"want_write"],[1273,"getline"],[1275,"getlines"],[1280,"truncate"],[1281,"stat"],[1282,"setbuf"],[1283,"setvbuf"],[1284,"fdopen"],[1287,"ungetc"],[1288,"send"],[1289,"recv"],[1307,"TIEHANDLE"],[1312,"READ"],[1313,"READLINE"],[1314,"GETC"],[1316,"PRINT"],[1317,"PRINTF"],[1318,"WRITE"],[1320,"FILENO"],[1322,"TELL"],[1323,"BINMODE"],[1326,"CLOSE"],[1348,"new"],[1461,"__ANON__"],[1500,"session_cache"],[1511,"has_session_cache"],[1515,"CLONE"],[1517,"DESTROY"],[1538,"new"],[1545,"get_session"],[1558,"add_session"],[1584,"DESTROY"]],"file":"/Volumes/perlbrew/locallib/pithub-v5.12.4/lib/perl5/IO/Socket/SSL.pm","digest":"58c72230ef3ad00476b28091976c0b55","branch":[[39,{"text":"if $@"}],[72,{"text":"unless (eval {\n\tdo {\n\trequire Socket6;\n'Socket6'->import('inet_pton');\nrequire IO::Socket::INET6;\n@ISA = 'IO::Socket::INET6';\n$can_ipv6 = 1\n}\n})"}],[130,{"text":"if $domain =~ /^[a-zA-Z0-9-_\\.]+$/"}],[120,{"text":"if (eval {\n\tdo {\n\trequire Net::IDN::Encode\n}\n}) { }"}],[120,{"text":"elsif (eval {\n\tdo {\n\trequire Net::LibIDN\n}\n}) { }"}],[120,{"text":"elsif (eval {\n\tdo {\n\trequire URI;\n'URI'->VERSION(1.5)\n}\n}) { }"}],[1300,{"text":"unless eval 'use Scalar::Util qw(weaken isweak); 1'"}],[1302,{"text":"$@ ? :"}],[97,{"text":"unless $DEBUG >= shift @_"}],[100,{"text":"if length $file > 20"}],[101,{"text":"if @_"}],[154,{"text":"if ($can_ipv6) { }"}],[150,{"text":"unless (UNIVERSAL::isa($class, 'IO::Socket::INET6'))"}],[144,{"text":"if (/^inet4$/i) { }"}],[144,{"text":"elsif (/^inet6$/i) { }"}],[144,{"text":"elsif (/^:?debug(\\d+)/) { }"}],[180,{"text":"unless $self"}],[191,{"text":"if (@res == 5)"}],[185,{"text":"if ($can_ipv6 and not $$arg_hash{'Domain'} and not $$arg_hash{'LocalAddr'} || $$arg_hash{'LocalHost'} and my $peer = $$arg_hash{'PeerAddr'} || $$arg_hash{'PeerHost'})"}],[208,{"text":"if defined $blocking"}],[210,{"text":"unless $self->configure_SSL($arg_hash)"}],[212,{"text":"unless $self->SUPER::configure($arg_hash)"}],[215,{"text":"if defined $blocking and not $blocking"}],[239,{"text":"if (not $is_server || defined $$arg_hash{'SSL_use_cert'} and grep {$$arg_hash{$_};} 'SSL_cert', 'SSL_cert_file' and grep {$$arg_hash{$_};} 'SSL_key', 'SSL_key_file')"}],[249,{"text":"if exists $$arg_hash{\"SSL_$k\"}"}],[250,{"text":"if exists $$arg_hash{\"SSL_${k}_file\"}"}],[251,{"text":"$is_server ? :"}],[258,{"text":"if (-f 'certs/my-ca.pem') { }"}],[258,{"text":"elsif (-d 'ca/') { }"}],[257,{"text":"unless (exists $$arg_hash{'SSL_ca_file'} or exists $$arg_hash{'SSL_ca_path'})"}],[279,{"text":"if ($host = $$arg_hash{'PeerAddr'} || $$arg_hash{'PeerHost'})"}],[278,{"text":"unless (defined $host)"}],[284,{"text":"unless $host"}],[289,{"text":"if $vcb"}],[290,{"text":"unless $ok"}],[292,{"text":"if $depth != 0"}],[272,{"text":"if ($vcn_scheme and $vcn_scheme ne 'none')"}],[304,{"text":"if $is_server"}],[313,{"text":"$err == Net::SSLeay::ERROR_WANT_WRITE() ? :"}],[313,{"text":"$err == Net::SSLeay::ERROR_WANT_READ() ? :"}],[318,{"text":"if ref $self"}],[327,{"text":"if ${*$self;}{'_SSL_opened'}"}],[335,{"text":"unless $self->SUPER::connect(@_)"}],[329,{"text":"unless (${*$self;}{'_SSL_opening'})"}],[344,{"text":"@_ > 1 ? :"}],[354,{"text":"unless defined $fileno"}],[360,{"text":"unless &Net::SSLeay::set_fd($ssl, $fileno)"}],[364,{"text":"unless &Net::SSLeay::set_cipher_list($ssl, $cl)"}],[363,{"text":"if (my $cl = $$arg_hash{'SSL_cipher_list'})"}],[368,{"text":"unless $$arg_hash{'PeerAddr'}"}],[370,{"text":"if $session"}],[347,{"text":"unless (${*$self;}{'_SSL_opening'})"}],[378,{"text":"exists $$args{'Timeout'} ? :"}],[379,{"text":"if (defined $timeout and $timeout > 0 and $self->blocking(0)) { }"}],[394,{"text":"unless ($self->_set_rw_error($ssl, $rv))"}],[405,{"text":"unless defined $timeout"}],[413,{"text":"$SSL_ERROR == 4331906304 ? :"}],[413,{"text":"$SSL_ERROR == 4331915912 ? :"}],[409,{"text":"if ($timeout > 0) { }"}],[421,{"text":"unless ($rv)"}],[393,{"text":"if ($rv < 0) { }"}],[393,{"text":"elsif ($rv == 0) { }"}],[451,{"text":"if defined $timeout"}],[456,{"text":"unless $$arg_hash{'PeerAddr'}"}],[459,{"text":"unless $session"}],[454,{"text":"if ($ctx->has_session_cache)"}],[487,{"text":"unless ($socket)"}],[494,{"text":"unless $self->accept_SSL($socket)"}],[497,{"text":"wantarray ? :"}],[502,{"text":"@_ && UNIVERSAL::isa($_[0], 'IO::Handle') ? :"}],[503,{"text":"@_ > 1 ? :"}],[514,{"text":"unless defined $fileno"}],[519,{"text":"unless &Net::SSLeay::set_fd($ssl, $fileno)"}],[523,{"text":"unless &Net::SSLeay::set_cipher_list($ssl, $cl)"}],[522,{"text":"if (my $cl = $$arg_hash{'SSL_cipher_list'})"}],[506,{"text":"unless (${*$self;}{'_SSL_opening'})"}],[535,{"text":"exists $$args{'Timeout'} ? :"}],[536,{"text":"if (defined $timeout and $timeout > 0 and $socket->blocking(0)) { }"}],[549,{"text":"unless ($socket->_set_rw_error($ssl, $rv))"}],[558,{"text":"unless defined $timeout"}],[565,{"text":"$SSL_ERROR == 4331906304 ? :"}],[565,{"text":"$SSL_ERROR == 4331915912 ? :"}],[562,{"text":"if ($timeout > 0) { }"}],[572,{"text":"unless ($rv)"}],[548,{"text":"if ($rv < 0) { }"}],[548,{"text":"elsif ($rv == 0) { }"}],[599,{"text":"if defined $timeout"}],[617,{"text":"unless $self->_set_rw_error($ssl, -1)"}],[616,{"text":"unless (defined $data)"}],[622,{"text":"unless defined $$buffer"}],[624,{"text":"if ($offset > length $$buffer)"}],[634,{"text":"$self->blocking ? :"}],[648,{"text":"if (Net::SSLeay::OPENSSL_VERSION_NUMBER() >= 9461791) { }"}],[665,{"text":"if $offset > $buf_len"}],[666,{"text":"if $offset == $buf_len"}],[671,{"text":"$length < $buf_len - $offset ? :"}],[674,{"text":"if not $written and $errs"}],[678,{"text":"if $written < 0"}],[670,{"text":"if ($write_all) { }"}],[681,{"text":"unless $self->_set_rw_error($ssl, -1)"}],[680,{"text":"unless (defined $written)"}],[716,{"text":"if $self->read($buffer, 1, 0)"}],[725,{"text":"if $err"}],[730,{"text":"unless $size > 0"}],[726,{"text":"if (not defined $/) { }"}],[726,{"text":"elsif (ref $/) { }"}],[726,{"text":"elsif ($/ eq '') { }"}],[723,{"text":"if (wantarray)"}],[741,{"text":"if $err"}],[745,{"text":"unless $size > 0"}],[747,{"text":"if $err"}],[751,{"text":"if $line eq ''"}],[756,{"text":"if Net::SSLeay::OPENSSL_VERSION_NUMBER() < 9461791"}],[763,{"text":"unless defined &Net::SSLeay::peek($ssl, 1)"}],[768,{"text":"if $pos < 0"}],[766,{"text":"unless ($eon)"}],[776,{"text":"if $eon < length $buf"}],[785,{"text":"if (my $l = length $buf) { }"}],[778,{"text":"if ($eon > 0) { }"}],[739,{"text":"if (not defined $/) { }"}],[739,{"text":"elsif (ref $/) { }"}],[739,{"text":"elsif ($/ ne '') { }"}],[796,{"text":"ref $_[0] eq 'HASH' ? :"}],[798,{"text":"unless $self->stop_SSL('SSL_fast_shutdown', 1, %$close_args, '_SSL_ioclass_downgrade', 0)"}],[804,{"text":"unless ($$close_args{'_SSL_in_DESTROY'})"}],[814,{"text":"ref $_[0] eq 'HASH' ? :"}],[815,{"text":"unless ${*$self;}{'_SSL_opened'}"}],[834,{"text":"if ($rv < 0) { }"}],[834,{"text":"elsif ($rv or $rv == 0 and $fast) { }"}],[824,{"text":"if ($fast and $status != 0) { }"}],[824,{"text":"elsif (($status & 1) == 0) { }"}],[824,{"text":"elsif ($status & 2) { }"}],[819,{"text":"if ($$stop_args{'SSL_no_shutdown'}) { }"}],[857,{"text":"unless $shutdown_done"}],[817,{"text":"if (my $ssl = ${*$self;}{'_SSL_object'})"}],[864,{"text":"if $ctx"}],[862,{"text":"if ($$stop_args{'SSL_ctx_free'})"}],[867,{"text":"if (my $cert = delete ${*$self;}{'_SSL_certificate'})"}],[878,{"text":"if (my $orig_class = delete ${*$self;}{'_SSL_ioclass_upgraded'})"}],[885,{"text":"if @sslkeys"}],[876,{"text":"if ($downgrade or not defined $downgrade)"}],[873,{"text":"unless ($$stop_args{'_SSL_in_DESTROY'})"}],[895,{"text":"defined $fn ? :"}],[904,{"text":"unless $ssl"}],[928,{"text":"unless ref $socket"}],[929,{"text":"ref $_[0] eq 'HASH' ? :"}],[930,{"text":"exists $$arg_hash{'Timeout'} ? :"}],[932,{"text":"UNIVERSAL::can($socket, 'fileno') ? :"}],[934,{"text":"unless defined $original_fileno"}],[937,{"text":"unless $socket->configure_SSL($arg_hash)"}],[947,{"text":"${*$socket;}{'_SSL_arguments'}{'SSL_server'} ? :"}],[950,{"text":"unless $blocking"}],[951,{"text":"$result ? :"}],[943,{"text":"if (not defined $start_handshake or $start_handshake) { }"}],[964,{"text":"unless length $mode"}],[962,{"text":"if (length $_[0] < 4)"}],[1016,{"text":"unless my $ssl = $self->_get_ssl_object"}],[1018,{"text":"unless my $cert = (${*$self;}{'_SSL_certificate'} ||= &Net::SSLeay::get_peer_certificate($ssl))"}],[1023,{"text":"unless my $sub = $dispatcher{$field}"}],[1022,{"text":"if ($field) { }"}],[1086,{"text":"unless $scheme = $scheme{$scheme}"}],[1084,{"text":"unless (ref $scheme)"}],[1094,{"text":"if (my $sub = $$scheme{'callback'})"}],[1105,{"text":"unless UNIVERSAL::can('IO::Socket::SSL', 'inet_pton')"}],[1107,{"text":"unless $ipn = inet_pton(30, $identity)"}],[1111,{"text":"unless $ipn = inet_aton($identity)"}],[1115,{"text":"if $identity =~ /\\0/"}],[1116,{"text":"unless $identity = idn_to_ascii($identity)"}],[1114,{"text":"if ($identity =~ /[^a-zA-Z0-9_.\\-]/)"}],[1102,{"text":"if ($identity =~ /:/) { }"}],[1102,{"text":"elsif ($identity =~ /^\\d+\\.\\d+\\.\\d+\\.\\d+$/) { }"}],[1132,{"text":"if ($wtyp eq 'anywhere' and $name =~ /^([a-zA-Z0-9_\\-]*)\\*(.+)/) { }"}],[1132,{"text":"elsif ($wtyp eq 'leftmost' and $name =~ /^\\*(\\..+)$/) { }"}],[1148,{"text":"if $ipn eq $name"}],[1153,{"text":"if &$check_name($name, $identity, $$scheme{'wildcards_in_alt'})"}],[1145,{"text":"if ($ipn and $type == GEN_IPADD()) { }"}],[1145,{"text":"elsif (not $ipn and $type == GEN_DNS()) { }"}],[1161,{"text":"if &$check_name($commonName, $identity, $$scheme{'wildcards_in_cn'})"}],[1158,{"text":"if (not $ipn and $$scheme{'check_cn'} eq 'always' || $$scheme{'check_cn'} eq 'when_only' && !$alt_dnsNames)"}],[1191,{"text":"if (defined $error_trap and ref $error_trap eq 'CODE') { }"}],[1191,{"text":"elsif (${*$self;}{'_SSL_ioclass_upgraded'}) { }"}],[1215,{"text":"if ref $self"}],[1223,{"text":"if ${*$self;}{'_SSL_opened'}"}],[1238,{"text":"ref $_[0] eq 'HASH' ? :"}],[1275,{"text":"if wantarray"}],[1308,{"text":"if $HAVE_WEAKREF"}],[1350,{"text":"ref $_[0] eq 'HASH' ? :"}],[1354,{"text":"if $ctx_object->isa('IO::Socket::SSL::SSL_Context') and $$ctx_object{'context'}"}],[1359,{"text":"if $ctx_object = ${*$ctx_object;}{'_SSL_ctx'}"}],[1353,{"text":"if ($ctx_object)"}],[1364,{"text":"/^tlsv1$/i ? :"}],[1364,{"text":"/^sslv3$/i ? :"}],[1364,{"text":"/^sslv2$/i ? :"}],[1370,{"text":"unless $ctx"}],[1383,{"text":"if ($verify_mode != Net::SSLeay::VERIFY_NONE() and defined $$arg_hash{'SSL_ca_file'} || defined $$arg_hash{'SSL_ca_path'} and not &Net::SSLeay::CTX_load_verify_locations($ctx, $$arg_hash{'SSL_ca_file'} || '', $$arg_hash{'SSL_ca_path'} || ''))"}],[1399,{"text":"if ($crl) { }"}],[1396,{"text":"if ($$arg_hash{'SSL_crl_file'})"}],[1391,{"text":"if (Net::SSLeay::OPENSSL_VERSION_NUMBER() >= 9465903) { }"}],[1390,{"text":"if ($$arg_hash{'SSL_check_crl'})"}],[1413,{"text":"if ($$arg_hash{'SSL_passwd_cb'})"}],[1419,{"text":"unless &Net::SSLeay::CTX_use_PrivateKey($ctx, $pkey)"}],[1422,{"text":"unless &Net::SSLeay::CTX_use_PrivateKey_file($ctx, $f, $filetype)"}],[1417,{"text":"if (my $pkey = $$arg_hash{'SSL_key'}) { }"}],[1417,{"text":"elsif (my $f = $$arg_hash{'SSL_key_file'}) { }"}],[1430,{"text":"ref $x509 eq 'ARRAY' ? :"}],[1432,{"text":"unless &Net::SSLeay::CTX_use_certificate($ctx, $cert)"}],[1435,{"text":"unless &Net::SSLeay::CTX_add_extra_chain_cert($ctx, $ca)"}],[1439,{"text":"unless &Net::SSLeay::CTX_use_certificate_chain_file($ctx, $f)"}],[1426,{"text":"if (my $x509 = $$arg_hash{'SSL_cert'}) { }"}],[1426,{"text":"elsif (my $f = $$arg_hash{'SSL_cert_file'}) { }"}],[1445,{"text":"unless &Net::SSLeay::CTX_set_tmp_dh($ctx, $dh)"}],[1452,{"text":"unless $dh"}],[1455,{"text":"unless $rv"}],[1443,{"text":"if (my $dh = $$arg_hash{'SSL_dh'}) { }"}],[1443,{"text":"elsif (my $f = $$arg_hash{'SSL_dh_file'}) { }"}],[1410,{"text":"if ($$arg_hash{'SSL_server'} or $$arg_hash{'SSL_use_cert'})"}],[1476,{"text":"if (my $cb = $$arg_hash{'SSL_create_ctx_callback'})"}],[1481,{"text":"if $verify_callback"}],[1489,{"text":"if $Net::SSLeay::VERSION < 1.26"}],[1485,{"text":"if (my $cache = $$arg_hash{'SSL_session_cache'}) { }"}],[1485,{"text":"elsif (my $size = $$arg_hash{'SSL_session_cache_size'}) { }"}],[1505,{"text":"defined $session ? :"}],[1523,{"text":"if ($$self{'has_verifycb'})"}],[1520,{"text":"if (%CTX_CREATED_IN_THIS_THREAD and delete $CTX_CREATED_IN_THIS_THREAD{$ctx})"}],[1518,{"text":"if (my $ctx = $$self{'context'})"}],[1539,{"text":"unless $size > 0"}],[1547,{"text":"if $$self{'_head'} eq $session"}],[1559,{"text":"if $key eq '_maxsize' or $key eq '_head'"}],[1566,{"text":"if $$self{'_maxsize'} == 1"}],[1561,{"text":"if (keys %$self > $$self{'_maxsize'} + 1)"}],[1571,{"text":"if ($$self{'_head'}) { }"}]],"condition":[[115,{"left":"UNIVERSAL::can('Net::SSLeay', $name)","right":"sub {\n\t$value;\n}\n","type":"or_2","op":"||"}],[185,{"left":"$can_ipv6","right":"not $$arg_hash{'Domain'}","type":"and_3","op":"and"}],[185,{"left":"$$arg_hash{'LocalAddr'}","right":"$$arg_hash{'LocalHost'}","type":"or_3","op":"||"}],[185,{"left":"$can_ipv6 and not $$arg_hash{'Domain'}","right":"not $$arg_hash{'LocalAddr'} || $$arg_hash{'LocalHost'}","type":"and_3","op":"and"}],[185,{"left":"$$arg_hash{'PeerAddr'}","right":"$$arg_hash{'PeerHost'}","type":"or_3","op":"||"}],[185,{"left":"$can_ipv6 and not $$arg_hash{'Domain'} and not $$arg_hash{'LocalAddr'} || $$arg_hash{'LocalHost'}","right":"my $peer = $$arg_hash{'PeerAddr'} || $$arg_hash{'PeerHost'}","type":"and_3","op":"and"}],[215,{"left":"defined $blocking","right":"not $blocking","type":"and_3","op":"and"}],[222,{"left":"$$arg_hash{'SSL_server'} || $$arg_hash{'Listen'}","right":"0","type":"or_2","op":"||"}],[239,{"left":"$is_server","right":"defined $$arg_hash{'SSL_use_cert'}","type":"or_3","op":"||"}],[239,{"left":"not $is_server || defined $$arg_hash{'SSL_use_cert'}","right":"grep {$$arg_hash{$_};} 'SSL_cert', 'SSL_cert_file'","type":"and_3","op":"and"}],[239,{"left":"not $is_server || defined $$arg_hash{'SSL_use_cert'} and grep {$$arg_hash{$_};} 'SSL_cert', 'SSL_cert_file'","right":"grep {$$arg_hash{$_};} 'SSL_key', 'SSL_key_file'","type":"and_3","op":"and"}],[257,{"left":"exists $$arg_hash{'SSL_ca_file'}","right":"exists $$arg_hash{'SSL_ca_path'}","type":"or_3","op":"or"}],[269,{"left":"defined $$arg_hash{$_}","right":"delete $$arg_hash{$_}","type":"or_2","op":"or"}],[272,{"left":"$vcn_scheme","right":"$vcn_scheme ne 'none'","type":"and_3","op":"and"}],[279,{"left":"$$arg_hash{'PeerAddr'}","right":"$$arg_hash{'PeerHost'}","type":"or_3","op":"||"}],[283,{"left":"ref $vcn_scheme && $$vcn_scheme{'callback'}","right":"'unknown'","type":"and_2","op":"&&"}],[283,{"left":"$host","right":"ref $vcn_scheme && $$vcn_scheme{'callback'} && 'unknown'","type":"or_2","op":"||="}],[303,{"left":"'IO::Socket::SSL::SSL_Context'->new($arg_hash)","right":"return","type":"or_2","op":"||"}],[317,{"left":"$!","right":"35","type":"or_2","op":"||="}],[326,{"left":"shift @_","right":"return(_invalid_object())","type":"or_2","op":"||"}],[344,{"left":"$_[0]","right":"{}","type":"or_2","op":"||"}],[357,{"left":"&Net::SSLeay::new($$ctx{'context'})","right":"return($self->error('SSL structure creation failed'))","type":"or_2","op":"||"}],[373,{"left":"$ssl","right":"${*$self;}{'_SSL_object'}","type":"or_2","op":"||="}],[379,{"left":"defined $timeout","right":"$timeout > 0","type":"and_3","op":"and"}],[379,{"left":"defined $timeout and $timeout > 0","right":"$self->blocking(0)","type":"and_3","op":"and"}],[388,{"left":"defined $timeout","right":"time","type":"and_3","op":"&&"}],[424,{"left":"$!","right":"60","type":"or_2","op":"||="}],[453,{"left":"$ctx","right":"${*$self;}{'_SSL_ctx'}","type":"or_2","op":"||="}],[483,{"left":"shift @_","right":"return(_invalid_object())","type":"or_2","op":"||"}],[484,{"left":"shift @_","right":"'IO::Socket::SSL'","type":"or_2","op":"||"}],[490,{"left":"$self->SUPER::accept($class)","right":"return","type":"or_2","op":"||"}],[502,{"left":"@_","right":"UNIVERSAL::isa($_[0], 'IO::Handle')","type":"and_3","op":"&&"}],[503,{"left":"$_[0]","right":"{}","type":"or_2","op":"||"}],[516,{"left":"&Net::SSLeay::new($$ctx{'context'})","right":"return($socket->error('SSL structure creation failed'))","type":"or_2","op":"||"}],[528,{"left":"$ssl","right":"${*$socket;}{'_SSL_object'}","type":"or_3","op":"||="}],[536,{"left":"defined $timeout","right":"$timeout > 0","type":"and_3","op":"and"}],[536,{"left":"defined $timeout and $timeout > 0","right":"$socket->blocking(0)","type":"and_3","op":"and"}],[544,{"left":"defined $timeout","right":"time","type":"and_3","op":"&&"}],[574,{"left":"$!","right":"60","type":"or_2","op":"||="}],[611,{"left":"$self->_get_ssl_object","right":"return","type":"or_2","op":"||"}],[623,{"left":"$offset","right":"0","type":"or_2","op":"||="}],[659,{"left":"$self->_get_ssl_object","right":"return","type":"or_2","op":"||"}],[663,{"left":"$length","right":"$buf_len","type":"or_2","op":"||="}],[664,{"left":"$offset","right":"0","type":"or_2","op":"||="}],[674,{"left":"not $written","right":"$errs","type":"and_3","op":"and"}],[705,{"left":"$,","right":"''","type":"or_2","op":"||"}],[705,{"left":"$\\","right":"''","type":"or_2","op":"||"}],[721,{"left":"$self->_get_ssl_object","right":"return","type":"or_2","op":"||"}],[795,{"left":"shift @_","right":"return(_invalid_object())","type":"or_2","op":"||"}],[813,{"left":"shift @_","right":"return(_invalid_object())","type":"or_2","op":"||"}],[824,{"left":"$fast","right":"$status != 0","type":"and_3","op":"and"}],[834,{"left":"$rv == 0","right":"$fast","type":"and_3","op":"and"}],[834,{"left":"$rv","right":"$rv == 0 and $fast","type":"or_3","op":"or"}],[876,{"left":"$downgrade","right":"not defined $downgrade","type":"or_3","op":"or"}],[912,{"left":"$ctx_object","right":"$$ctx_object{'context'}","type":"and_3","op":"&&"}],[922,{"left":"shift(@_)->_get_ssl_object","right":"return","type":"or_2","op":"||"}],[937,{"left":"bless $socket, $original_class","right":"return","type":"and_2","op":"and"}],[943,{"left":"not defined $start_handshake","right":"$start_handshake","type":"or_3","op":"or"}],[951,{"left":"bless($socket, $original_class)","right":"()","type":"and_3","op":"&&"}],[966,{"left":"$ISA[0]->new_from_fd($fd, '+<')","right":"return($class->error('Could not create socket from file descriptor.'))","type":"or_2","op":"||"}],[977,{"left":"shift(@_)->_get_ssl_object","right":"return","type":"or_2","op":"||"}],[1018,{"left":"${*$self;}{'_SSL_certificate'}","right":"&Net::SSLeay::get_peer_certificate($ssl)","type":"or_3","op":"||="}],[1083,{"left":"shift @_","right":"'none'","type":"or_2","op":"||"}],[1124,{"left":"$wtyp","right":"''","type":"or_2","op":"||="}],[1132,{"left":"$wtyp eq 'anywhere'","right":"$name =~ /^([a-zA-Z0-9_\\-]*)\\*(.+)/","type":"and_3","op":"and"}],[1132,{"left":"$wtyp eq 'leftmost'","right":"$name =~ /^\\*(\\..+)$/","type":"and_3","op":"and"}],[1145,{"left":"$ipn","right":"$type == GEN_IPADD()","type":"and_3","op":"and"}],[1145,{"left":"not $ipn","right":"$type == GEN_DNS()","type":"and_3","op":"and"}],[1158,{"left":"$$scheme{'check_cn'} eq 'always'","right":"$$scheme{'check_cn'} eq 'when_only' && !$alt_dnsNames","type":"or_3","op":"||"}],[1158,{"left":"not $ipn","right":"$$scheme{'check_cn'} eq 'always' || $$scheme{'check_cn'} eq 'when_only' && !$alt_dnsNames","type":"and_3","op":"and"}],[1123,{"left":"","right":"","type":"or_2","op":"||="}],[1178,{"left":"shift(@_)->_get_ssl_object","right":"return","type":"or_2","op":"||"}],[1184,{"left":"(ref $self ? ${*$self;}{'_SSL_last_err'} : $SSL_ERROR)","right":"''","type":"or_2","op":"||"}],[1191,{"left":"defined $error_trap","right":"ref $error_trap eq 'CODE'","type":"and_3","op":"and"}],[1207,{"left":"Net::SSLeay::print_errs('SSL error: ')","right":"''","type":"or_2","op":"||"}],[1221,{"left":"shift @_","right":"return","type":"or_2","op":"||"}],[1260,{"left":"IO::Handle::opened($self)","right":"${*$self;}{'_SSL_opened'}","type":"and_3","op":"&&"}],[1354,{"left":"$ctx_object->isa('IO::Socket::SSL::SSL_Context')","right":"$$ctx_object{'context'}","type":"and_3","op":"and"}],[1383,{"left":"defined $$arg_hash{'SSL_ca_file'}","right":"defined $$arg_hash{'SSL_ca_path'}","type":"or_3","op":"||"}],[1383,{"left":"$verify_mode != Net::SSLeay::VERIFY_NONE()","right":"defined $$arg_hash{'SSL_ca_file'} || defined $$arg_hash{'SSL_ca_path'}","type":"and_3","op":"and"}],[1383,{"left":"$$arg_hash{'SSL_ca_file'}","right":"''","type":"or_2","op":"||"}],[1383,{"left":"$$arg_hash{'SSL_ca_path'}","right":"''","type":"or_2","op":"||"}],[1383,{"left":"$verify_mode != Net::SSLeay::VERIFY_NONE() and defined $$arg_hash{'SSL_ca_file'} || defined $$arg_hash{'SSL_ca_path'}","right":"not &Net::SSLeay::CTX_load_verify_locations($ctx, $$arg_hash{'SSL_ca_file'} || '', $$arg_hash{'SSL_ca_path'} || '')","type":"and_3","op":"and"}],[1410,{"left":"$$arg_hash{'SSL_server'}","right":"$$arg_hash{'SSL_use_cert'}","type":"or_3","op":"or"}],[1448,{"left":"&Net::SSLeay::BIO_new_file($f, 'r')","right":"return('IO::Socket::SSL'->error(\"Failed to open DH file $f\"))","type":"or_2","op":"||"}],[1472,{"left":"$verify_cb","right":"sub {\n\tmy($ok, $ctx_store) = @_;\nmy($certname, $cert, $error);\nif ($ctx_store) {\n\t$cert = &Net::SSLeay::X509_STORE_CTX_get_current_cert($ctx_store);\n$error = &Net::SSLeay::X509_STORE_CTX_get_error($ctx_store);\n$certname = &Net::SSLeay::X509_NAME_oneline(&Net::SSLeay::X509_get_issuer_name($cert)) . &Net::SSLeay::X509_NAME_oneline(&Net::SSLeay::X509_get_subject_name($cert));\n$error &&= &Net::SSLeay::ERR_error_string($error);\n}\u000b;\nDEBUG(3, \"ok=$ok cert=$cert\");\nreturn &$verify_cb($ok, $ctx_store, $certname, $error, $cert);\n}\n","type":"and_2","op":"&&"}],[1468,{"left":"$error","right":"&Net::SSLeay::ERR_error_string($error)","type":"and_2","op":"&&="}],[1501,{"left":"$$ctx{'session_cache'}","right":"return","type":"or_2","op":"||"}],[1503,{"left":"$addr =~ s/:(\\w+)$//","right":"$1","type":"and_3","op":"&&"}],[1503,{"left":"$port","right":"$addr =~ s/:(\\w+)$// && $1","type":"or_3","op":"||="}],[1520,{"left":"%CTX_CREATED_IN_THIS_THREAD","right":"delete $CTX_CREATED_IN_THIS_THREAD{$ctx}","type":"and_3","op":"and"}],[1546,{"left":"$$self{$key}","right":"return","type":"or_2","op":"||"}],[1559,{"left":"$key eq '_maxsize'","right":"$key eq '_head'","type":"or_3","op":"or"}]],"start":{"1238":{"context_init":[{"statement":674,"subroutine":75,"time":null,"branch":183,"condition":76}]},"32":{"BEGIN":[{"statement":18,"subroutine":6,"time":null,"branch":null,"condition":null}]},"21":{"BEGIN":[{"statement":12,"subroutine":4,"time":null,"branch":null,"condition":null}]},"1314":{"GETC":[{"statement":706,"subroutine":96,"time":null,"branch":186,"condition":77}]},"1284":{"fdopen":[{"statement":695,"subroutine":89,"time":null,"branch":185,"condition":77}]},"720":{"readline":[{"statement":438,"subroutine":48,"time":null,"branch":102,"condition":47}]},"1320":{"FILENO":[{"statement":714,"subroutine":100,"time":null,"branch":186,"condition":77}]},"288":{"__ANON__":[{"statement":180,"subroutine":31,"time":null,"branch":38,"condition":18}]},"977":{"dump_peer_certificate":[{"statement":586,"subroutine":58,"time":null,"branch":156,"condition":60}]},"18":{"BEGIN":[{"statement":3,"subroutine":1,"time":null,"branch":null,"condition":null}]},"1178":{"get_cipher":[{"statement":640,"subroutine":63,"time":null,"branch":179,"condition":71}]},"179":{"configure":[{"statement":124,"subroutine":29,"time":null,"branch":16,"condition":1}]},"72":{"BEGIN":[{"statement":36,"subroutine":12,"time":null,"branch":1,"condition":null}]},"125":{"__ANON__":[{"statement":109,"subroutine":27,"time":null,"branch":11,"condition":1}]},"1221":{"DESTROY":[{"statement":663,"subroutine":68,"time":null,"branch":182,"condition":75}]},"647":{"peek":[{"statement":403,"subroutine":41,"time":null,"branch":92,"condition":41}]},"1235":{"get_peer_certificate":[{"statement":673,"subroutine":74,"time":null,"branch":183,"condition":76}]},"1206":{"get_ssleay_error":[{"statement":654,"subroutine":66,"time":null,"branch":181,"condition":74}]},"1188":{"fatal_ssl_error":[{"statement":644,"subroutine":65,"time":null,"branch":179,"condition":73}]},"1273":{"getline":[{"statement":688,"subroutine":83,"time":null,"branch":184,"condition":77}]},"1229":{"socket_to_SSL":[{"statement":668,"subroutine":69,"time":null,"branch":183,"condition":76}]},"1334":{"BEGIN":[{"statement":90,"subroutine":21,"time":null,"branch":8,"condition":1}]},"108":{"BEGIN":[{"statement":53,"subroutine":14,"time":null,"branch":2,"condition":null}]},"1289":{"recv":[{"statement":698,"subroutine":92,"time":null,"branch":185,"condition":77}]},"1280":{"truncate":[{"statement":691,"subroutine":85,"time":null,"branch":185,"condition":77}]},"220":{"configure_SSL":[{"statement":138,"subroutine":30,"time":null,"branch":23,"condition":7}]},"115":{"__ANON__":[{"statement":108,"subroutine":26,"time":null,"branch":11,"condition":1}]},"1268":{"want_read":[{"statement":686,"subroutine":81,"time":null,"branch":184,"condition":77}]},"20":{"BEGIN":[{"statement":9,"subroutine":3,"time":null,"branch":null,"condition":null}]},"1312":{"READ":[{"statement":702,"subroutine":94,"time":null,"branch":186,"condition":77}]},"1282":{"setbuf":[{"statement":693,"subroutine":87,"time":null,"branch":185,"condition":77}]},"1275":{"getlines":[{"statement":689,"subroutine":84,"time":null,"branch":184,"condition":77}]},"1250":{"set_ctx_defaults":[{"statement":677,"subroutine":78,"time":null,"branch":184,"condition":76}]},"922":{"pending":[{"statement":554,"subroutine":55,"time":null,"branch":144,"condition":55}]},"633":{"read":[{"statement":399,"subroutine":39,"time":null,"branch":91,"condition":41}]},"1545":{"get_session":[{"statement":817,"subroutine":111,"time":null,"branch":226,"condition":91}]},"343":{"connect_SSL":[{"statement":196,"subroutine":34,"time":null,"branch":44,"condition":20}]},"1511":{"has_session_cache":[{"statement":801,"subroutine":107,"time":null,"branch":222,"condition":90}]},"1183":{"errstr":[{"statement":642,"subroutine":64,"time":null,"branch":179,"condition":72}]},"1292":{"BEGIN":[{"statement":72,"subroutine":15,"time":null,"branch":6,"condition":1}]},"902":{"_get_ssl_object":[{"statement":544,"subroutine":52,"time":null,"branch":143,"condition":54}]},"1081":{"verify_hostname_of_cert":[{"statement":596,"subroutine":60,"time":null,"branch":160,"condition":62}]},"1333":{"BEGIN":[{"statement":87,"subroutine":20,"time":null,"branch":8,"condition":1}]},"692":{"write":[{"statement":427,"subroutine":43,"time":null,"branch":101,"condition":45}]},"610":{"generic_read":[{"statement":384,"subroutine":38,"time":null,"branch":87,"condition":39}]},"1242":{"set_default_context":[{"statement":675,"subroutine":76,"time":null,"branch":184,"condition":76}]},"1584":{"DESTROY":[{"statement":844,"subroutine":113,"time":null,"branch":231,"condition":93}]},"1233":{"issuer_name":[{"statement":671,"subroutine":72,"time":null,"branch":183,"condition":76}]},"1535":{"BEGIN":[{"statement":99,"subroutine":24,"time":null,"branch":8,"condition":1}]},"1538":{"new":[{"statement":814,"subroutine":110,"time":null,"branch":225,"condition":91}]},"97":{"DEBUG":[{"statement":102,"subroutine":25,"time":null,"branch":8,"condition":1}]},"114":{"BEGIN":[{"statement":50,"subroutine":13,"time":null,"branch":2,"condition":null}]},"52":{"BEGIN":[{"statement":30,"subroutine":10,"time":null,"branch":1,"condition":null}]},"1500":{"session_cache":[{"statement":795,"subroutine":106,"time":null,"branch":221,"condition":87}]},"657":{"generic_write":[{"statement":407,"subroutine":42,"time":null,"branch":93,"condition":41}]},"1318":{"WRITE":[{"statement":712,"subroutine":99,"time":null,"branch":186,"condition":77}]},"642":{"sysread":[{"statement":401,"subroutine":40,"time":null,"branch":92,"condition":41}]},"19":{"BEGIN":[{"statement":6,"subroutine":2,"time":null,"branch":null,"condition":null}]},"1300":{"BEGIN":[{"statement":84,"subroutine":19,"time":null,"branch":8,"condition":1}]},"311":{"_set_rw_error":[{"statement":180,"subroutine":32,"time":null,"branch":38,"condition":18}]},"54":{"BEGIN":[{"statement":33,"subroutine":11,"time":null,"branch":1,"condition":null}]},"1340":{"BEGIN":[{"statement":93,"subroutine":22,"time":null,"branch":8,"condition":1}]},"910":{"_get_ctx_object":[{"statement":549,"subroutine":53,"time":null,"branch":144,"condition":54}]},"1341":{"BEGIN":[{"statement":96,"subroutine":23,"time":null,"branch":8,"condition":1}]},"795":{"close":[{"statement":483,"subroutine":49,"time":null,"branch":122,"condition":48}]},"1326":{"CLOSE":[{"statement":719,"subroutine":103,"time":null,"branch":186,"condition":77}]},"17":{"BEGIN":[{"statement":null,"subroutine":null,"time":null,"branch":null,"condition":null}]},"917":{"_invalid_object":[{"statement":553,"subroutine":54,"time":null,"branch":144,"condition":55}]},"1287":{"ungetc":[{"statement":696,"subroutine":90,"time":null,"branch":185,"condition":77}]},"1246":{"set_default_session_cache":[{"statement":676,"subroutine":77,"time":null,"branch":184,"condition":76}]},"893":{"fileno":[{"statement":540,"subroutine":51,"time":null,"branch":142,"condition":54}]},"1281":{"stat":[{"statement":692,"subroutine":86,"time":null,"branch":185,"condition":77}]},"1231":{"kill_socket":[{"statement":670,"subroutine":71,"time":null,"branch":183,"condition":76}]},"1293":{"BEGIN":[{"statement":75,"subroutine":16,"time":null,"branch":6,"condition":1}]},"1123":{"__ANON__":[{"statement":636,"subroutine":61,"time":null,"branch":179,"condition":70}]},"1322":{"TELL":[{"statement":716,"subroutine":101,"time":null,"branch":186,"condition":77}]},"1317":{"PRINTF":[{"statement":710,"subroutine":98,"time":null,"branch":186,"condition":77}]},"1230":{"socketToSSL":[{"statement":669,"subroutine":70,"time":null,"branch":183,"condition":76}]},"710":{"printf":[{"statement":434,"subroutine":46,"time":null,"branch":101,"condition":47}]},"471":{"_update_peer":[{"statement":289,"subroutine":35,"time":null,"branch":66,"condition":28}]},"501":{"accept_SSL":[{"statement":307,"subroutine":37,"time":null,"branch":69,"condition":31}]},"699":{"syswrite":[{"statement":429,"subroutine":44,"time":null,"branch":101,"condition":45}]},"1259":{"opened":[{"statement":681,"subroutine":79,"time":null,"branch":184,"condition":76}]},"1313":{"READLINE":[{"statement":704,"subroutine":95,"time":null,"branch":186,"condition":77}]},"1297":{"BEGIN":[{"statement":81,"subroutine":18,"time":null,"branch":6,"condition":1}]},"960":{"new_from_fd":[{"statement":579,"subroutine":57,"time":null,"branch":154,"condition":59}]},"140":{"import":[{"statement":109,"subroutine":28,"time":null,"branch":11,"condition":1}]},"1517":{"DESTROY":[{"statement":803,"subroutine":109,"time":null,"branch":222,"condition":90}]},"1323":{"BINMODE":[{"statement":718,"subroutine":102,"time":null,"branch":186,"condition":77}]},"1269":{"want_write":[{"statement":687,"subroutine":82,"time":null,"branch":184,"condition":77}]},"1558":{"add_session":[{"statement":827,"subroutine":112,"time":null,"branch":227,"condition":92}]},"1283":{"setvbuf":[{"statement":694,"subroutine":88,"time":null,"branch":185,"condition":77}]},"813":{"stop_SSL":[{"statement":492,"subroutine":50,"time":null,"branch":125,"condition":49}]},"22":{"BEGIN":[{"statement":15,"subroutine":5,"time":null,"branch":null,"condition":null}]},"1294":{"BEGIN":[{"statement":78,"subroutine":17,"time":null,"branch":6,"condition":1}]},"715":{"getc":[{"statement":436,"subroutine":47,"time":null,"branch":101,"condition":47}]},"1316":{"PRINT":[{"statement":708,"subroutine":97,"time":null,"branch":186,"condition":77}]},"927":{"start_SSL":[{"statement":556,"subroutine":56,"time":null,"branch":144,"condition":56}]},"1348":{"new":[{"statement":723,"subroutine":104,"time":null,"branch":186,"condition":77}]},"1264":{"opening":[{"statement":683,"subroutine":80,"time":null,"branch":184,"condition":77}]},"1170":{"verify_hostname":[{"statement":636,"subroutine":62,"time":null,"branch":179,"condition":71}]},"1461":{"__ANON__":[{"statement":786,"subroutine":105,"time":null,"branch":221,"condition":86}]},"704":{"print":[{"statement":431,"subroutine":45,"time":null,"branch":101,"condition":45}]},"326":{"connect":[{"statement":187,"subroutine":33,"time":null,"branch":41,"condition":19}]},"1515":{"CLONE":[{"statement":802,"subroutine":108,"time":null,"branch":222,"condition":90}]},"1015":{"peer_certificate":[{"statement":588,"subroutine":59,"time":null,"branch":156,"condition":61}]},"38":{"BEGIN":[{"statement":21,"subroutine":7,"time":null,"branch":null,"condition":null},{"statement":24,"subroutine":8,"time":null,"branch":null,"condition":null}]},"1211":{"error":[{"statement":656,"subroutine":67,"time":null,"branch":181,"condition":75}]},"483":{"accept":[{"statement":296,"subroutine":36,"time":null,"branch":66,"condition":28}]},"1288":{"send":[{"statement":697,"subroutine":91,"time":null,"branch":185,"condition":77}]},"1307":{"TIEHANDLE":[{"statement":699,"subroutine":93,"time":null,"branch":185,"condition":77}]},"43":{"BEGIN":[{"statement":27,"subroutine":9,"time":null,"branch":1,"condition":null}]},"1234":{"subject_name":[{"statement":672,"subroutine":73,"time":null,"branch":183,"condition":76}]},"-1":{"__COVER__":[{"statement":849,"subroutine":114,"time":null,"branch":231,"condition":93}]}}}